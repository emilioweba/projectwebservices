// default package
// Generated Sep 20, 2015 6:10:57 PM by Hibernate Tools 4.3.1
package com.hibernate.project;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product", catalog = "projectwebservices")
public class Product implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer productId;
	private Partner partner;
	private ProductCategory productCategory;
	private String productName;
	private String productDetails;
	private String productPrice;
	private Set<Order> orders = new HashSet<Order>(0);
	private Set<ProductImages> productImageses = new HashSet<ProductImages>(0);
	private Set<ProductComments> productCommentses = new HashSet<ProductComments>(0);

	public Product() {
	}

	public Product(Partner partner, ProductCategory productCategory, String productName, String productPrice) {
		this.partner = partner;
		this.productCategory = productCategory;
		this.productName = productName;
		this.productPrice = productPrice;
	}

	public Product(Partner partner, ProductCategory productCategory, String productName, String productDetails,
			String productPrice, Set<Order> orders, Set<ProductImages> productImageses,
			Set<ProductComments> productCommentses) {
		this.partner = partner;
		this.productCategory = productCategory;
		this.productName = productName;
		this.productDetails = productDetails;
		this.productPrice = productPrice;
		this.orders = orders;
		this.productImageses = productImageses;
		this.productCommentses = productCommentses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "Product_ID", unique = true, nullable = false)
	public Integer getProductId() {
		return this.productId;
	}

	public void setProductId(Integer productId) {
		this.productId = productId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Partner_Partner_ID", nullable = false)
	public Partner getPartner() {
		return this.partner;
	}

	public void setPartner(Partner partner) {
		this.partner = partner;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Category_FK", nullable = false)
	public ProductCategory getProductCategory() {
		return this.productCategory;
	}

	public void setProductCategory(ProductCategory productCategory) {
		this.productCategory = productCategory;
	}

	@Column(name = "Product_Name", nullable = false, length = 45)
	public String getProductName() {
		return this.productName;
	}

	public void setProductName(String productName) {
		this.productName = productName;
	}

	@Column(name = "Product_Details", length = 200)
	public String getProductDetails() {
		return this.productDetails;
	}

	public void setProductDetails(String productDetails) {
		this.productDetails = productDetails;
	}

	@Column(name = "Product_Price", nullable = false, length = 45)
	public String getProductPrice() {
		return this.productPrice;
	}

	public void setProductPrice(String productPrice) {
		this.productPrice = productPrice;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "order_product", catalog = "projectwebservices", joinColumns = {
			@JoinColumn(name = "Product_Product_ID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Order_Order_ID", nullable = false, updatable = false) })
	public Set<Order> getOrders() {
		return this.orders;
	}

	public void setOrders(Set<Order> orders) {
		this.orders = orders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<ProductImages> getProductImageses() {
		return this.productImageses;
	}

	public void setProductImageses(Set<ProductImages> productImageses) {
		this.productImageses = productImageses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<ProductComments> getProductCommentses() {
		return this.productCommentses;
	}

	public void setProductCommentses(Set<ProductComments> productCommentses) {
		this.productCommentses = productCommentses;
	}

}
